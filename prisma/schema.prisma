// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(cuid())
  email        String
  firstName    String
  lastName     String
  profileImage String?

  createdAt DateTime @default(now())
  resume    Resume[]
}

model Resume {
  id         String   @id @default(cuid())
  title      String
  slug       String   @unique
  active     Boolean
  firstName  String
  lastName   String
  birthday   DateTime
  pictureUrl String?
  about      String
  createdAt  DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  contact   Contact? @relation(fields: [contactId], references: [id])
  contactId String?

  skills          Skill[]
  education       Education[]
  references      Reference[]
  workExperiences WorkExperience[]
}

model Contact {
  id    String @id @default(cuid())
  email String
  phone String

  createdAt DateTime @default(now())

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?

  socialNetworks SocialNetwork[]
  resume         Resume[]
}

model Address {
  id      String  @id @default(cuid())
  street  String
  city    String
  state   String
  county  String?
  country String
  zip     String

  createdAt DateTime @default(now())

  contact Contact[]
}

model SocialNetwork {
  id   String @id @default(cuid())
  name String
  url  String

  createdAt DateTime @default(now())

  contact   Contact @relation(fields: [contactId], references: [id])
  contactId String
}

model Education {
  id        String   @id @default(cuid())
  school    String
  field     String
  startYear DateTime
  endYear   DateTime

  resume Resume[]
}

model Skill {
  id   String @id @default(cuid())
  name String
  type String

  resume Resume[]
}

// enum SkillType {
//   TECHNICAL
//   PERSONAL
//   SOFTSKILL
//   HOBBIES
//   HARDSKILL
// }

model WorkExperience {
  id             String         @id @default(cuid())
  title          String
  description    String
  company        String
  location       String
  startDate      DateTime       @default(now())
  endDate        DateTime?      @default(now())
  isCurrent      Boolean        @default(false)
  link           String?
  employmentType EmploymentType
  workLocation   WorkLocation

  resume   Resume @relation(fields: [resumeId], references: [id])
  resumeId String
}

enum EmploymentType {
  FREELANCER
  VOLUNTEER
  EMPLOYEE
}

enum WorkLocation {
  REMOTE
  ONSITE
  HYBRID
}

model Reference {
  id    String @id @default(cuid())
  name  String
  email String
  phone String

  resume Resume[]
}
